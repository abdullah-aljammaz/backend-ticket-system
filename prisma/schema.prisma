datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

enum Roles {
  ADMIN
  SUPER_ADMIN
  USER
}

enum PaymentStatus {
  pending
  successful
  failed
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  password  String
  firstName String
  lastName  String
  role      Roles     @default(USER)
  phone     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  payments  Payment[]
  tickets   Ticket[]
  Event     Event[]
}

model Event {
  id          String   @id @default(uuid())
  title       String
  description String
  location    String
  startDate   DateTime
  endDate     DateTime
  image       String?
  price       Int
  isBooked    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  admin       String
  user        User     @relation(fields: [admin], references: [id])
  tickets    Ticket[]
  Categories Categories[]
  

  @@index([admin])
}

model Ticket {
  id          String   @id @default(uuid())
  eventId     String
  event       Event    @relation(fields: [eventId], references: [id])
  price       Int
  bookedBy    String
  bookedUser  User     @relation(fields: [bookedBy], references: [id])
  bookingDate DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([eventId])
  @@index([bookedBy])
}

model Payment {
  id        String   @id @default(uuid())
  user_id   String
  user      User     @relation(fields: [user_id], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@index([user_id])
}

model Categories {
  id       String @id @default(uuid())
  name     String
  img      String
  event_id String
  event    Event  @relation(fields: [event_id], references: [id])

  @@index([event_id])
}
